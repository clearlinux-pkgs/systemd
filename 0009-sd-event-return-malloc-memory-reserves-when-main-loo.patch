From 878e5047feb67053061d06b67cfff78e3f0dffb4 Mon Sep 17 00:00:00 2001
From: Dimitri John Ledkov <dimitri.j.ledkov@intel.com>
Date: Tue, 23 Jun 2015 11:47:18 +0100
Subject: [PATCH 09/44] sd-event: return malloc() memory reserves when main
 loop is idle.

---
 src/libsystemd/sd-event/sd-event.c | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/src/libsystemd/sd-event/sd-event.c b/src/libsystemd/sd-event/sd-event.c
index 1987f279eb..96db6b8858 100644
--- a/src/libsystemd/sd-event/sd-event.c
+++ b/src/libsystemd/sd-event/sd-event.c
@@ -3,6 +3,7 @@
 #include <sys/epoll.h>
 #include <sys/timerfd.h>
 #include <sys/wait.h>
+#include <malloc.h>
 
 #include "sd-daemon.h"
 #include "sd-event.h"
@@ -3279,9 +3280,17 @@ _public_ int sd_event_run(sd_event *e, uint64_t timeout) {
         }
 
         r = sd_event_prepare(e);
-        if (r == 0)
-                /* There was nothing? Then wait... */
+        if (r == 0) {
+                /* There was nothing? Then wait...
+                 *
+                 * ... but since there is no event pending, likely
+                 * we'll be idle for a long time.  This is a good time
+                 * to return any malloc() memory reserves to the
+                 * operating system.
+                 */
+                malloc_trim(0);
                 r = sd_event_wait(e, timeout);
+        }
 
         if (e->profile_delays)
                 e->last_run = now(CLOCK_MONOTONIC);
-- 
2.21.0

