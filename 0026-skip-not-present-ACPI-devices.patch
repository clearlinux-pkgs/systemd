From d49f20b5d00ac70d3353ea2084707bf1b2c79bcf Mon Sep 17 00:00:00 2001
From: Auke Kok <auke-jan.h.kok@intel.com>
Date: Fri, 14 Jul 2017 11:33:26 -0700
Subject: [PATCH 26/44] skip not-present ACPI devices

Xen and older Qemu expose a boatload (253) ACPI devices to the guest
that are not present; these show up in sysfs but there's nothing
meaningful one can do with them.

This patch will have udev skip these devices to save the 100ms+
boot time
---
 src/libsystemd/sd-device/device-enumerator.c | 20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)

diff --git a/src/libsystemd/sd-device/device-enumerator.c b/src/libsystemd/sd-device/device-enumerator.c
index 95dfc2f077..786bb19189 100644
--- a/src/libsystemd/sd-device/device-enumerator.c
+++ b/src/libsystemd/sd-device/device-enumerator.c
@@ -406,6 +406,23 @@ static bool match_sysname(sd_device_enumerator *enumerator, const char *sysname)
         return false;
 }
 
+static int acpi_status_disabled(char *sysfspath)
+{
+        FILE *file;
+        unsigned int i;
+        char newpath[4096];
+        char line[128];
+        sprintf(newpath, "%s/status", sysfspath);
+        file = fopen(newpath, "r");
+        if (!file)
+                return 0;
+        fclose(file);
+
+        if (strstr(sysfspath, "acpi") && strstr(sysfspath, "device:"))
+                return 1;
+        return 0;
+}
+
 static int enumerator_scan_dir_and_add_devices(sd_device_enumerator *enumerator, const char *basedir, const char *subdir1, const char *subdir2) {
         _cleanup_closedir_ DIR *dir = NULL;
         char *path;
@@ -440,6 +457,9 @@ static int enumerator_scan_dir_and_add_devices(sd_device_enumerator *enumerator,
 
                 (void) sprintf(syspath, "%s%s", path, dent->d_name);
 
+                if (acpi_status_disabled(syspath))
+                        continue;
+
                 k = sd_device_new_from_syspath(&device, syspath);
                 if (k < 0) {
                         if (k != -ENODEV)
-- 
2.28.0

